{
  "swagger": "2.0",
  "info": {
    "title": "IMS Security Management System API",
    "version": "1.0",
    "contact": {
      "name": "creapptive.com/ims-security",
      "url": "https://www.creapptive.com/",
      "email": "demo@creapptive.com"
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/account/login": {
      "post": {
        "operationId": "Apigateway_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageLoginReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageLoginRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/location/info": {
      "get": {
        "operationId": "Apigateway_GetLocationTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetLocationTreeReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/location/update": {
      "post": {
        "operationId": "Apigateway_UpdateLocationTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageUpdateLocationTreeReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageUpdateLocationTreeRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/privilege-profile/create": {
      "post": {
        "operationId": "Apigateway_CreatePrivilegeProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageCreatePrivilegeProfileReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageCreatePrivilegeProfileRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/privilege-profile/delete": {
      "post": {
        "operationId": "Apigateway_DeletePrivilegeProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageDeletePrivilegeProfileReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageDeletePrivilegeProfileRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/privilege-profile/info": {
      "get": {
        "operationId": "Apigateway_GetPrivilegeProfiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetPrivilegeProfilesReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      },
      "post": {
        "operationId": "Apigateway_GetPrivilegeProfileByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetPrivilegeProfileByIDReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageGetPrivilegeProfileByIDRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/privilege-profile/update": {
      "post": {
        "operationId": "Apigateway_UpdatePrivilegeProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageUpdatePrivilegeProfileReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageUpdatePrivilegeProfileRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/scope/info": {
      "get": {
        "operationId": "Apigateway_GetScopeTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetScopeTreeReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/scope/update": {
      "post": {
        "operationId": "Apigateway_UpdateScopeTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageUpdateScopeTreeReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageUpdateScopeTreeRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/create": {
      "post": {
        "operationId": "Apigateway_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageCreateUserReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageCreateUserRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/delete": {
      "post": {
        "operationId": "Apigateway_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageDeleteUserReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageDeleteUserRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/info": {
      "get": {
        "operationId": "Apigateway_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetUsersReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      },
      "post": {
        "operationId": "Apigateway_GetUserByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetUserByIDReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/myself": {
      "get": {
        "operationId": "Apigateway_GetMyself",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageGetMyselfReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/password": {
      "post": {
        "operationId": "Apigateway_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageChangePasswordReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/reset": {
      "post": {
        "operationId": "Apigateway_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageResetPasswordReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/user/update": {
      "post": {
        "operationId": "Apigateway_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageUpdateUserReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Apigateway"
        ]
      }
    },
    "/api/version": {
      "post": {
        "operationId": "Apigateway_ChangeVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageChangeVersionReply"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Apigateway"
        ]
      }
    }
  },
  "definitions": {
    "messageChangePasswordReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageChangePasswordRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "messageChangeVersionReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelChangeVersion"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageCreatePrivilegeProfileReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelPrivilegeProfile"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageCreatePrivilegeProfileRequest": {
      "type": "object",
      "properties": {
        "privilegeProfile": {
          "$ref": "#/definitions/modelPrivilegeProfile"
        }
      }
    },
    "messageCreateUserReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelUser"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageCreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelUser"
        }
      }
    },
    "messageDeletePrivilegeProfileReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageDeletePrivilegeProfileRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "messageDeleteUserReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageDeleteUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "messageGetLocationTreeReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelLocationNode"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageGetMyselfReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelMyself"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageGetPrivilegeProfileByIDReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelPrivilegeProfile"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageGetPrivilegeProfileByIDRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "messageGetPrivilegeProfilesReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/modelPrivilegeProfile"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageGetScopeTreeReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelScopeNode"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageGetUserByIDReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelUser"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageGetUsersReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/modelUser"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageLoginReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelMyself"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "messageResetPasswordReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageResetPasswordRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "messageUpdateLocationTreeReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelLocationNode"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageUpdateLocationTreeRequest": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelLocationNode"
          }
        }
      }
    },
    "messageUpdatePrivilegeProfileReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelPrivilegeProfile"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageUpdatePrivilegeProfileRequest": {
      "type": "object",
      "properties": {
        "privilegeProfile": {
          "$ref": "#/definitions/modelPrivilegeProfile"
        }
      }
    },
    "messageUpdateScopeTreeReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelScopeNode"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageUpdateScopeTreeRequest": {
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelScopeNode"
          }
        }
      }
    },
    "messageUpdateUserReply": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/modelUser"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "messageUpdateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelUser"
        }
      }
    },
    "modelChangeVersion": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "privilegeProfile": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "modelLocationNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentID": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelLocationNode"
          }
        }
      }
    },
    "modelMyself": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelUser"
        },
        "privilegeProfile": {
          "$ref": "#/definitions/modelPrivilegeProfile"
        }
      }
    },
    "modelPrivilegeProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@inject_tag: bson:\"_id,omitempty\""
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "modelScopeNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentID": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelLocationNode"
          }
        }
      }
    },
    "modelUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@inject_tag: bson:\"_id,omitempty\""
        },
        "locationIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopeID": {
          "type": "string"
        },
        "privilegeProfileID": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
